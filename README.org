* uacc
Universal access to Erlang data structures

uacc provides an easy way to set/get values in nested data structures.


* examples
  - getting value:
    
    uacc:get takes path into nested structure and returns found value
    #+BEGIN_SRC erlang
      > X = [[{b, c}, {a, {0, 1, 2}}, {c, 7}], []].
      [[{b, c}, {a, {0, 1, 2}}, {c, 7}], []]
      > uacc:get([1], X).
      [{b,c},{a,{0,1,2}},{c,7}]
      > uacc:get([1, a], X).
      {0,1,2}
      > uacc:get([1, a, 1], X).
      0
    #+END_SRC

  - updating value:
    
    uacc:update takes update function, path and nested structure.
    update function is called with found value as argument and returns value to replace original one.
    #+BEGIN_SRC erlang
      > X = [{a, [{x, 0}, {v, 10}, {y, 15}], x}, b, c, d].
      [{a, [{x, 0}, {v, 10}, {y, 15}], x}, b, c, d]
      > uacc:update(fun(V) -> new end, [1], X).
      [new,b,c,d]
      > uacc:update(fun(V) -> new end, [1, 2], X).
      [{a,new,x},b,c,d]
      > uacc:update(fun(V) -> new end, [1, 2, v], X).
      [{a,[{x,0},{v,new},{y,15}],x},b,c,d]
    #+END_SRC

  - records support:
    
    register a record for runtime operations:
    #+BEGIN_SRC erlang
      %% somewhere in sources:
      %% -record(my_rec, {field1, field2, field3}).

      > uacc:add_record(my_rec, record_info(fields, my_rec)).
      ok
    #+END_SRC
    
    - get record fields:
      #+BEGIN_SRC erlang
        > uacc:record_fields(my_rec).
        [{1,'$record'},{2,field1},{3,field2},{4,field3}]
      #+END_SRC

    - create record from proplist:
      #+BEGIN_SRC erlang
        > R = uacc:make_record(my_rec, [{field2, f2}, {field3, zzz}]).
        #my_rec{field1 = undefined,field2 = f2,field3 = zzz}
      #+END_SRC

    - convert record to proplist:
      #+BEGIN_SRC erlang
        > uacc:record_to_plist(R).
        [{'$record',my_rec},
         {field1,undefined},
         {field2,f2},
         {field3,zzz}]
      #+END_SRC
      

* todo
  * add universal getter [DONE]
  * add records support [DONE]
  * add tests [DONE]
  * add custom data structures support?

